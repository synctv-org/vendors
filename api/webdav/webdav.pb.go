// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: webdav/webdav.proto

package webdav

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webdav_webdav_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_webdav_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_webdav_webdav_proto_rawDescGZIP(), []int{0}
}

type FsTestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *FsTestReq) Reset() {
	*x = FsTestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webdav_webdav_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsTestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsTestReq) ProtoMessage() {}

func (x *FsTestReq) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_webdav_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsTestReq.ProtoReflect.Descriptor instead.
func (*FsTestReq) Descriptor() ([]byte, []int) {
	return file_webdav_webdav_proto_rawDescGZIP(), []int{1}
}

func (x *FsTestReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FsTestReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FsTestReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type FsGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Path     string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *FsGetReq) Reset() {
	*x = FsGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webdav_webdav_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsGetReq) ProtoMessage() {}

func (x *FsGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_webdav_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsGetReq.ProtoReflect.Descriptor instead.
func (*FsGetReq) Descriptor() ([]byte, []int) {
	return file_webdav_webdav_proto_rawDescGZIP(), []int{2}
}

func (x *FsGetReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FsGetReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FsGetReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *FsGetReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FsGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size     int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	IsDir    bool   `protobuf:"varint,3,opt,name=isDir,proto3" json:"isDir,omitempty"`
	Modified int64  `protobuf:"varint,4,opt,name=modified,proto3" json:"modified,omitempty"`
}

func (x *FsGetResp) Reset() {
	*x = FsGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webdav_webdav_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsGetResp) ProtoMessage() {}

func (x *FsGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_webdav_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsGetResp.ProtoReflect.Descriptor instead.
func (*FsGetResp) Descriptor() ([]byte, []int) {
	return file_webdav_webdav_proto_rawDescGZIP(), []int{3}
}

func (x *FsGetResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FsGetResp) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FsGetResp) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *FsGetResp) GetModified() int64 {
	if x != nil {
		return x.Modified
	}
	return 0
}

type FsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Path     string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Page     uint64 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PerPage  uint64 `protobuf:"varint,6,opt,name=perPage,proto3" json:"perPage,omitempty"`
}

func (x *FsListReq) Reset() {
	*x = FsListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webdav_webdav_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsListReq) ProtoMessage() {}

func (x *FsListReq) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_webdav_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsListReq.ProtoReflect.Descriptor instead.
func (*FsListReq) Descriptor() ([]byte, []int) {
	return file_webdav_webdav_proto_rawDescGZIP(), []int{4}
}

func (x *FsListReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FsListReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FsListReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *FsListReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FsListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FsListReq) GetPerPage() uint64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type FsListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []*FsListResp_FsListContent `protobuf:"bytes,1,rep,name=content,proto3" json:"content,omitempty"`
	Total   uint64                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FsListResp) Reset() {
	*x = FsListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webdav_webdav_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsListResp) ProtoMessage() {}

func (x *FsListResp) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_webdav_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsListResp.ProtoReflect.Descriptor instead.
func (*FsListResp) Descriptor() ([]byte, []int) {
	return file_webdav_webdav_proto_rawDescGZIP(), []int{5}
}

func (x *FsListResp) GetContent() []*FsListResp_FsListContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *FsListResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FsSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Path     string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Keywords string `protobuf:"bytes,5,opt,name=keywords,proto3" json:"keywords,omitempty"`
	Page     uint64 `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	PerPage  uint64 `protobuf:"varint,7,opt,name=perPage,proto3" json:"perPage,omitempty"`
}

func (x *FsSearchReq) Reset() {
	*x = FsSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webdav_webdav_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsSearchReq) ProtoMessage() {}

func (x *FsSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_webdav_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsSearchReq.ProtoReflect.Descriptor instead.
func (*FsSearchReq) Descriptor() ([]byte, []int) {
	return file_webdav_webdav_proto_rawDescGZIP(), []int{6}
}

func (x *FsSearchReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FsSearchReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FsSearchReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *FsSearchReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FsSearchReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *FsSearchReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FsSearchReq) GetPerPage() uint64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type FsSearchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []*FsSearchResp_FsSearchContent `protobuf:"bytes,1,rep,name=content,proto3" json:"content,omitempty"`
	Total   uint64                          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FsSearchResp) Reset() {
	*x = FsSearchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webdav_webdav_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsSearchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsSearchResp) ProtoMessage() {}

func (x *FsSearchResp) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_webdav_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsSearchResp.ProtoReflect.Descriptor instead.
func (*FsSearchResp) Descriptor() ([]byte, []int) {
	return file_webdav_webdav_proto_rawDescGZIP(), []int{7}
}

func (x *FsSearchResp) GetContent() []*FsSearchResp_FsSearchContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *FsSearchResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FsListResp_FsListContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size     int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	IsDir    bool   `protobuf:"varint,3,opt,name=isDir,proto3" json:"isDir,omitempty"`
	Modified int64  `protobuf:"varint,4,opt,name=modified,proto3" json:"modified,omitempty"`
}

func (x *FsListResp_FsListContent) Reset() {
	*x = FsListResp_FsListContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webdav_webdav_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsListResp_FsListContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsListResp_FsListContent) ProtoMessage() {}

func (x *FsListResp_FsListContent) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_webdav_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsListResp_FsListContent.ProtoReflect.Descriptor instead.
func (*FsListResp_FsListContent) Descriptor() ([]byte, []int) {
	return file_webdav_webdav_proto_rawDescGZIP(), []int{5, 0}
}

func (x *FsListResp_FsListContent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FsListResp_FsListContent) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FsListResp_FsListContent) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *FsListResp_FsListContent) GetModified() int64 {
	if x != nil {
		return x.Modified
	}
	return 0
}

type FsSearchResp_FsSearchContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsDir bool   `protobuf:"varint,2,opt,name=isDir,proto3" json:"isDir,omitempty"`
	Size  int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FsSearchResp_FsSearchContent) Reset() {
	*x = FsSearchResp_FsSearchContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webdav_webdav_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsSearchResp_FsSearchContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsSearchResp_FsSearchContent) ProtoMessage() {}

func (x *FsSearchResp_FsSearchContent) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_webdav_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsSearchResp_FsSearchContent.ProtoReflect.Descriptor instead.
func (*FsSearchResp_FsSearchContent) Descriptor() ([]byte, []int) {
	return file_webdav_webdav_proto_rawDescGZIP(), []int{7, 0}
}

func (x *FsSearchResp_FsSearchContent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FsSearchResp_FsSearchContent) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *FsSearchResp_FsSearchContent) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_webdav_webdav_proto protoreflect.FileDescriptor

var file_webdav_webdav_proto_rawDesc = []byte{
	0x0a, 0x13, 0x77, 0x65, 0x62, 0x64, 0x61, 0x76, 0x2f, 0x77, 0x65, 0x62, 0x64, 0x61, 0x76, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x64, 0x61,
	0x76, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x57, 0x0a, 0x09, 0x46, 0x73, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x6a, 0x0a, 0x08, 0x46, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x65, 0x0a,
	0x09, 0x46, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x09, 0x46, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x22, 0xcd, 0x01, 0x0a, 0x0a, 0x46, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3e, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x64, 0x61, 0x76, 0x2e, 0x46, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x46, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0x69, 0x0a, 0x0d, 0x46, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x44, 0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x22, 0xb7, 0x01, 0x0a, 0x0b, 0x46, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x0c, 0x46,
	0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x64, 0x61, 0x76, 0x2e, 0x46, 0x73, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x46, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0x4f, 0x0a, 0x0f, 0x46, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x44, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44,
	0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x32, 0xbf, 0x02, 0x0a, 0x06, 0x57, 0x65, 0x62, 0x64, 0x61,
	0x76, 0x12, 0x48, 0x0a, 0x05, 0x46, 0x73, 0x47, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x77, 0x65, 0x62, 0x64, 0x61, 0x76, 0x2e, 0x46, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x64, 0x61, 0x76, 0x2e, 0x46, 0x73,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x3a,
	0x01, 0x2a, 0x22, 0x07, 0x2f, 0x66, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x4c, 0x0a, 0x06, 0x46,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x64,
	0x61, 0x76, 0x2e, 0x46, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x64, 0x61, 0x76, 0x2e, 0x46, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x3a, 0x01, 0x2a, 0x22,
	0x08, 0x2f, 0x66, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x08, 0x46, 0x73, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x64,
	0x61, 0x76, 0x2e, 0x46, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x64, 0x61, 0x76, 0x2e, 0x46, 0x73, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f,
	0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x66, 0x73, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x47, 0x0a, 0x06, 0x46, 0x73, 0x54, 0x65, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x77, 0x65, 0x62, 0x64, 0x61, 0x76, 0x2e, 0x46, 0x73, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x64, 0x61, 0x76, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x3a, 0x01, 0x2a, 0x22, 0x08,
	0x2f, 0x66, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x42, 0x3f, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x2e,
	0x77, 0x65, 0x62, 0x64, 0x61, 0x76, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x76, 0x2d, 0x6f, 0x72, 0x67, 0x2f,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x65, 0x62, 0x64,
	0x61, 0x76, 0x3b, 0x77, 0x65, 0x62, 0x64, 0x61, 0x76, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_webdav_webdav_proto_rawDescOnce sync.Once
	file_webdav_webdav_proto_rawDescData = file_webdav_webdav_proto_rawDesc
)

func file_webdav_webdav_proto_rawDescGZIP() []byte {
	file_webdav_webdav_proto_rawDescOnce.Do(func() {
		file_webdav_webdav_proto_rawDescData = protoimpl.X.CompressGZIP(file_webdav_webdav_proto_rawDescData)
	})
	return file_webdav_webdav_proto_rawDescData
}

var file_webdav_webdav_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_webdav_webdav_proto_goTypes = []interface{}{
	(*Empty)(nil),                        // 0: api.webdav.Empty
	(*FsTestReq)(nil),                    // 1: api.webdav.FsTestReq
	(*FsGetReq)(nil),                     // 2: api.webdav.FsGetReq
	(*FsGetResp)(nil),                    // 3: api.webdav.FsGetResp
	(*FsListReq)(nil),                    // 4: api.webdav.FsListReq
	(*FsListResp)(nil),                   // 5: api.webdav.FsListResp
	(*FsSearchReq)(nil),                  // 6: api.webdav.FsSearchReq
	(*FsSearchResp)(nil),                 // 7: api.webdav.FsSearchResp
	(*FsListResp_FsListContent)(nil),     // 8: api.webdav.FsListResp.FsListContent
	(*FsSearchResp_FsSearchContent)(nil), // 9: api.webdav.FsSearchResp.FsSearchContent
}
var file_webdav_webdav_proto_depIdxs = []int32{
	8, // 0: api.webdav.FsListResp.content:type_name -> api.webdav.FsListResp.FsListContent
	9, // 1: api.webdav.FsSearchResp.content:type_name -> api.webdav.FsSearchResp.FsSearchContent
	2, // 2: api.webdav.Webdav.FsGet:input_type -> api.webdav.FsGetReq
	4, // 3: api.webdav.Webdav.FsList:input_type -> api.webdav.FsListReq
	6, // 4: api.webdav.Webdav.FsSearch:input_type -> api.webdav.FsSearchReq
	1, // 5: api.webdav.Webdav.FsTest:input_type -> api.webdav.FsTestReq
	3, // 6: api.webdav.Webdav.FsGet:output_type -> api.webdav.FsGetResp
	5, // 7: api.webdav.Webdav.FsList:output_type -> api.webdav.FsListResp
	7, // 8: api.webdav.Webdav.FsSearch:output_type -> api.webdav.FsSearchResp
	0, // 9: api.webdav.Webdav.FsTest:output_type -> api.webdav.Empty
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_webdav_webdav_proto_init() }
func file_webdav_webdav_proto_init() {
	if File_webdav_webdav_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_webdav_webdav_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webdav_webdav_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsTestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webdav_webdav_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webdav_webdav_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webdav_webdav_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webdav_webdav_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webdav_webdav_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webdav_webdav_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsSearchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webdav_webdav_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsListResp_FsListContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webdav_webdav_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsSearchResp_FsSearchContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_webdav_webdav_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_webdav_webdav_proto_goTypes,
		DependencyIndexes: file_webdav_webdav_proto_depIdxs,
		MessageInfos:      file_webdav_webdav_proto_msgTypes,
	}.Build()
	File_webdav_webdav_proto = out.File
	file_webdav_webdav_proto_rawDesc = nil
	file_webdav_webdav_proto_goTypes = nil
	file_webdav_webdav_proto_depIdxs = nil
}
