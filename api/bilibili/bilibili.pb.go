// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: bilibili/bilibili.proto

package bilibili

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QRCodeStatus int32

const (
	QRCodeStatus_UNKNOWN    QRCodeStatus = 0
	QRCodeStatus_EXPIRED    QRCodeStatus = 1
	QRCodeStatus_NOTSCANNED QRCodeStatus = 2
	QRCodeStatus_SCANNED    QRCodeStatus = 3
	QRCodeStatus_SUCCESS    QRCodeStatus = 4
)

// Enum value maps for QRCodeStatus.
var (
	QRCodeStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "EXPIRED",
		2: "NOTSCANNED",
		3: "SCANNED",
		4: "SUCCESS",
	}
	QRCodeStatus_value = map[string]int32{
		"UNKNOWN":    0,
		"EXPIRED":    1,
		"NOTSCANNED": 2,
		"SCANNED":    3,
		"SUCCESS":    4,
	}
)

func (x QRCodeStatus) Enum() *QRCodeStatus {
	p := new(QRCodeStatus)
	*p = x
	return p
}

func (x QRCodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QRCodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_bilibili_proto_enumTypes[0].Descriptor()
}

func (QRCodeStatus) Type() protoreflect.EnumType {
	return &file_bilibili_bilibili_proto_enumTypes[0]
}

func (x QRCodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QRCodeStatus.Descriptor instead.
func (QRCodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{0}
}

type NewQRCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *NewQRCodeResp) Reset() {
	*x = NewQRCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewQRCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewQRCodeResp) ProtoMessage() {}

func (x *NewQRCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewQRCodeResp.ProtoReflect.Descriptor instead.
func (*NewQRCodeResp) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{1}
}

func (x *NewQRCodeResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *NewQRCodeResp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type LoginWithQRCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *LoginWithQRCodeReq) Reset() {
	*x = LoginWithQRCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginWithQRCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginWithQRCodeReq) ProtoMessage() {}

func (x *LoginWithQRCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginWithQRCodeReq.ProtoReflect.Descriptor instead.
func (*LoginWithQRCodeReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{2}
}

func (x *LoginWithQRCodeReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type LoginWithQRCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  QRCodeStatus      `protobuf:"varint,1,opt,name=status,proto3,enum=api.bilibili.QRCodeStatus" json:"status,omitempty"`
	Cookies map[string]string `protobuf:"bytes,2,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LoginWithQRCodeResp) Reset() {
	*x = LoginWithQRCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginWithQRCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginWithQRCodeResp) ProtoMessage() {}

func (x *LoginWithQRCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginWithQRCodeResp.ProtoReflect.Descriptor instead.
func (*LoginWithQRCodeResp) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{3}
}

func (x *LoginWithQRCodeResp) GetStatus() QRCodeStatus {
	if x != nil {
		return x.Status
	}
	return QRCodeStatus_UNKNOWN
}

func (x *LoginWithQRCodeResp) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

type NewCaptchaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Gt        string `protobuf:"bytes,2,opt,name=gt,proto3" json:"gt,omitempty"`
	Challenge string `protobuf:"bytes,3,opt,name=challenge,proto3" json:"challenge,omitempty"`
}

func (x *NewCaptchaResp) Reset() {
	*x = NewCaptchaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCaptchaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCaptchaResp) ProtoMessage() {}

func (x *NewCaptchaResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCaptchaResp.ProtoReflect.Descriptor instead.
func (*NewCaptchaResp) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{4}
}

func (x *NewCaptchaResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *NewCaptchaResp) GetGt() string {
	if x != nil {
		return x.Gt
	}
	return ""
}

func (x *NewCaptchaResp) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

type NewSMSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone     string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Challenge string `protobuf:"bytes,3,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Validate  string `protobuf:"bytes,4,opt,name=validate,proto3" json:"validate,omitempty"`
}

func (x *NewSMSReq) Reset() {
	*x = NewSMSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSMSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSMSReq) ProtoMessage() {}

func (x *NewSMSReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSMSReq.ProtoReflect.Descriptor instead.
func (*NewSMSReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{5}
}

func (x *NewSMSReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *NewSMSReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *NewSMSReq) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

func (x *NewSMSReq) GetValidate() string {
	if x != nil {
		return x.Validate
	}
	return ""
}

type NewSMSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaptchaKey string `protobuf:"bytes,1,opt,name=captchaKey,proto3" json:"captchaKey,omitempty"`
}

func (x *NewSMSResp) Reset() {
	*x = NewSMSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSMSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSMSResp) ProtoMessage() {}

func (x *NewSMSResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSMSResp.ProtoReflect.Descriptor instead.
func (*NewSMSResp) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{6}
}

func (x *NewSMSResp) GetCaptchaKey() string {
	if x != nil {
		return x.CaptchaKey
	}
	return ""
}

type LoginWithSMSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone      string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Code       string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	CaptchaKey string `protobuf:"bytes,3,opt,name=captchaKey,proto3" json:"captchaKey,omitempty"`
}

func (x *LoginWithSMSReq) Reset() {
	*x = LoginWithSMSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginWithSMSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginWithSMSReq) ProtoMessage() {}

func (x *LoginWithSMSReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginWithSMSReq.ProtoReflect.Descriptor instead.
func (*LoginWithSMSReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{7}
}

func (x *LoginWithSMSReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *LoginWithSMSReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LoginWithSMSReq) GetCaptchaKey() string {
	if x != nil {
		return x.CaptchaKey
	}
	return ""
}

type LoginWithSMSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies map[string]string `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LoginWithSMSResp) Reset() {
	*x = LoginWithSMSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginWithSMSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginWithSMSResp) ProtoMessage() {}

func (x *LoginWithSMSResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginWithSMSResp.ProtoReflect.Descriptor instead.
func (*LoginWithSMSResp) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{8}
}

func (x *LoginWithSMSResp) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

type VideoPageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Actors     string       `protobuf:"bytes,3,opt,name=actors,proto3" json:"actors,omitempty"`
	VideoInfos []*VideoInfo `protobuf:"bytes,4,rep,name=videoInfos,proto3" json:"videoInfos,omitempty"`
}

func (x *VideoPageInfo) Reset() {
	*x = VideoPageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPageInfo) ProtoMessage() {}

func (x *VideoPageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPageInfo.ProtoReflect.Descriptor instead.
func (*VideoPageInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{9}
}

func (x *VideoPageInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoPageInfo) GetActors() string {
	if x != nil {
		return x.Actors
	}
	return ""
}

func (x *VideoPageInfo) GetVideoInfos() []*VideoInfo {
	if x != nil {
		return x.VideoInfos
	}
	return nil
}

type VideoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bvid       string `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	Cid        uint64 `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
	Epid       uint64 `protobuf:"varint,4,opt,name=epid,proto3" json:"epid,omitempty"`
	Name       string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	CoverImage string `protobuf:"bytes,6,opt,name=coverImage,proto3" json:"coverImage,omitempty"`
	Live       bool   `protobuf:"varint,7,opt,name=live,proto3" json:"live,omitempty"`
}

func (x *VideoInfo) Reset() {
	*x = VideoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoInfo) ProtoMessage() {}

func (x *VideoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoInfo.ProtoReflect.Descriptor instead.
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{10}
}

func (x *VideoInfo) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *VideoInfo) GetCid() uint64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *VideoInfo) GetEpid() uint64 {
	if x != nil {
		return x.Epid
	}
	return 0
}

func (x *VideoInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VideoInfo) GetCoverImage() string {
	if x != nil {
		return x.CoverImage
	}
	return ""
}

func (x *VideoInfo) GetLive() bool {
	if x != nil {
		return x.Live
	}
	return false
}

type ParseVideoPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies  map[string]string `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Aid      uint64            `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid     string            `protobuf:"bytes,3,opt,name=bvid,proto3" json:"bvid,omitempty"`
	Sections bool              `protobuf:"varint,4,opt,name=sections,proto3" json:"sections,omitempty"`
}

func (x *ParseVideoPageReq) Reset() {
	*x = ParseVideoPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseVideoPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseVideoPageReq) ProtoMessage() {}

func (x *ParseVideoPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseVideoPageReq.ProtoReflect.Descriptor instead.
func (*ParseVideoPageReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{11}
}

func (x *ParseVideoPageReq) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *ParseVideoPageReq) GetAid() uint64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ParseVideoPageReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *ParseVideoPageReq) GetSections() bool {
	if x != nil {
		return x.Sections
	}
	return false
}

type VideoURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcceptDescription []string `protobuf:"bytes,1,rep,name=acceptDescription,proto3" json:"acceptDescription,omitempty"`
	AcceptQuality     []uint64 `protobuf:"varint,2,rep,packed,name=acceptQuality,proto3" json:"acceptQuality,omitempty"`
	CurrentQuality    uint64   `protobuf:"varint,3,opt,name=currentQuality,proto3" json:"currentQuality,omitempty"`
	Url               string   `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *VideoURL) Reset() {
	*x = VideoURL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoURL) ProtoMessage() {}

func (x *VideoURL) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoURL.ProtoReflect.Descriptor instead.
func (*VideoURL) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{12}
}

func (x *VideoURL) GetAcceptDescription() []string {
	if x != nil {
		return x.AcceptDescription
	}
	return nil
}

func (x *VideoURL) GetAcceptQuality() []uint64 {
	if x != nil {
		return x.AcceptQuality
	}
	return nil
}

func (x *VideoURL) GetCurrentQuality() uint64 {
	if x != nil {
		return x.CurrentQuality
	}
	return 0
}

func (x *VideoURL) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetVideoURLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies map[string]string `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Aid     uint64            `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid    string            `protobuf:"bytes,3,opt,name=bvid,proto3" json:"bvid,omitempty"`
	Cid     uint64            `protobuf:"varint,4,opt,name=cid,proto3" json:"cid,omitempty"`
	Quality uint64            `protobuf:"varint,5,opt,name=quality,proto3" json:"quality,omitempty"`
}

func (x *GetVideoURLReq) Reset() {
	*x = GetVideoURLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoURLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoURLReq) ProtoMessage() {}

func (x *GetVideoURLReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoURLReq.ProtoReflect.Descriptor instead.
func (*GetVideoURLReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{13}
}

func (x *GetVideoURLReq) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *GetVideoURLReq) GetAid() uint64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *GetVideoURLReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *GetVideoURLReq) GetCid() uint64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *GetVideoURLReq) GetQuality() uint64 {
	if x != nil {
		return x.Quality
	}
	return 0
}

type GetDashVideoURLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies map[string]string `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Aid     uint64            `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid    string            `protobuf:"bytes,3,opt,name=bvid,proto3" json:"bvid,omitempty"`
	Cid     uint64            `protobuf:"varint,4,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *GetDashVideoURLReq) Reset() {
	*x = GetDashVideoURLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDashVideoURLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashVideoURLReq) ProtoMessage() {}

func (x *GetDashVideoURLReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashVideoURLReq.ProtoReflect.Descriptor instead.
func (*GetDashVideoURLReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{14}
}

func (x *GetDashVideoURLReq) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *GetDashVideoURLReq) GetAid() uint64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *GetDashVideoURLReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *GetDashVideoURLReq) GetCid() uint64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

type GetDashVideoURLResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mpd     string `protobuf:"bytes,1,opt,name=mpd,proto3" json:"mpd,omitempty"`
	HevcMpd string `protobuf:"bytes,2,opt,name=hevcMpd,proto3" json:"hevcMpd,omitempty"`
}

func (x *GetDashVideoURLResp) Reset() {
	*x = GetDashVideoURLResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDashVideoURLResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashVideoURLResp) ProtoMessage() {}

func (x *GetDashVideoURLResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashVideoURLResp.ProtoReflect.Descriptor instead.
func (*GetDashVideoURLResp) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{15}
}

func (x *GetDashVideoURLResp) GetMpd() string {
	if x != nil {
		return x.Mpd
	}
	return ""
}

func (x *GetDashVideoURLResp) GetHevcMpd() string {
	if x != nil {
		return x.HevcMpd
	}
	return ""
}

type GetSubtitlesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies map[string]string `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Aid     uint64            `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid    string            `protobuf:"bytes,3,opt,name=bvid,proto3" json:"bvid,omitempty"`
	Cid     uint64            `protobuf:"varint,4,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *GetSubtitlesReq) Reset() {
	*x = GetSubtitlesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubtitlesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubtitlesReq) ProtoMessage() {}

func (x *GetSubtitlesReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubtitlesReq.ProtoReflect.Descriptor instead.
func (*GetSubtitlesReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{16}
}

func (x *GetSubtitlesReq) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *GetSubtitlesReq) GetAid() uint64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *GetSubtitlesReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *GetSubtitlesReq) GetCid() uint64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

type GetSubtitlesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subtitles map[string]string `protobuf:"bytes,1,rep,name=subtitles,proto3" json:"subtitles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetSubtitlesResp) Reset() {
	*x = GetSubtitlesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubtitlesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubtitlesResp) ProtoMessage() {}

func (x *GetSubtitlesResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubtitlesResp.ProtoReflect.Descriptor instead.
func (*GetSubtitlesResp) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{17}
}

func (x *GetSubtitlesResp) GetSubtitles() map[string]string {
	if x != nil {
		return x.Subtitles
	}
	return nil
}

type ParsePGCPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies map[string]string `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ssid    uint64            `protobuf:"varint,2,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Epid    uint64            `protobuf:"varint,3,opt,name=epid,proto3" json:"epid,omitempty"`
}

func (x *ParsePGCPageReq) Reset() {
	*x = ParsePGCPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParsePGCPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsePGCPageReq) ProtoMessage() {}

func (x *ParsePGCPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsePGCPageReq.ProtoReflect.Descriptor instead.
func (*ParsePGCPageReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{18}
}

func (x *ParsePGCPageReq) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *ParsePGCPageReq) GetSsid() uint64 {
	if x != nil {
		return x.Ssid
	}
	return 0
}

func (x *ParsePGCPageReq) GetEpid() uint64 {
	if x != nil {
		return x.Epid
	}
	return 0
}

type GetPGCURLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies map[string]string `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Epid    uint64            `protobuf:"varint,2,opt,name=epid,proto3" json:"epid,omitempty"`
	Cid     uint64            `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
	Quality uint64            `protobuf:"varint,4,opt,name=quality,proto3" json:"quality,omitempty"`
}

func (x *GetPGCURLReq) Reset() {
	*x = GetPGCURLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPGCURLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPGCURLReq) ProtoMessage() {}

func (x *GetPGCURLReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPGCURLReq.ProtoReflect.Descriptor instead.
func (*GetPGCURLReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{19}
}

func (x *GetPGCURLReq) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *GetPGCURLReq) GetEpid() uint64 {
	if x != nil {
		return x.Epid
	}
	return 0
}

func (x *GetPGCURLReq) GetCid() uint64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *GetPGCURLReq) GetQuality() uint64 {
	if x != nil {
		return x.Quality
	}
	return 0
}

type GetDashPGCURLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies map[string]string `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Epid    uint64            `protobuf:"varint,2,opt,name=epid,proto3" json:"epid,omitempty"`
	Cid     uint64            `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *GetDashPGCURLReq) Reset() {
	*x = GetDashPGCURLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDashPGCURLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashPGCURLReq) ProtoMessage() {}

func (x *GetDashPGCURLReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashPGCURLReq.ProtoReflect.Descriptor instead.
func (*GetDashPGCURLReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{20}
}

func (x *GetDashPGCURLReq) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *GetDashPGCURLReq) GetEpid() uint64 {
	if x != nil {
		return x.Epid
	}
	return 0
}

func (x *GetDashPGCURLReq) GetCid() uint64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

type GetDashPGCURLResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mpd     string `protobuf:"bytes,1,opt,name=mpd,proto3" json:"mpd,omitempty"`
	HevcMpd string `protobuf:"bytes,2,opt,name=hevcMpd,proto3" json:"hevcMpd,omitempty"`
}

func (x *GetDashPGCURLResp) Reset() {
	*x = GetDashPGCURLResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDashPGCURLResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashPGCURLResp) ProtoMessage() {}

func (x *GetDashPGCURLResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashPGCURLResp.ProtoReflect.Descriptor instead.
func (*GetDashPGCURLResp) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{21}
}

func (x *GetDashPGCURLResp) GetMpd() string {
	if x != nil {
		return x.Mpd
	}
	return ""
}

func (x *GetDashPGCURLResp) GetHevcMpd() string {
	if x != nil {
		return x.HevcMpd
	}
	return ""
}

type UserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies map[string]string `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UserInfoReq) Reset() {
	*x = UserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoReq) ProtoMessage() {}

func (x *UserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoReq.ProtoReflect.Descriptor instead.
func (*UserInfoReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{22}
}

func (x *UserInfoReq) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

type UserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLogin  bool   `protobuf:"varint,1,opt,name=isLogin,proto3" json:"isLogin,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Face     string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	IsVip    bool   `protobuf:"varint,4,opt,name=isVip,proto3" json:"isVip,omitempty"`
}

func (x *UserInfoResp) Reset() {
	*x = UserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoResp) ProtoMessage() {}

func (x *UserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoResp.ProtoReflect.Descriptor instead.
func (*UserInfoResp) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{23}
}

func (x *UserInfoResp) GetIsLogin() bool {
	if x != nil {
		return x.IsLogin
	}
	return false
}

func (x *UserInfoResp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInfoResp) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *UserInfoResp) GetIsVip() bool {
	if x != nil {
		return x.IsVip
	}
	return false
}

type MatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *MatchReq) Reset() {
	*x = MatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchReq) ProtoMessage() {}

func (x *MatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchReq.ProtoReflect.Descriptor instead.
func (*MatchReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{24}
}

func (x *MatchReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type MatchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MatchResp) Reset() {
	*x = MatchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchResp) ProtoMessage() {}

func (x *MatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchResp.ProtoReflect.Descriptor instead.
func (*MatchResp) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{25}
}

func (x *MatchResp) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MatchResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetLiveStreamsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies map[string]string `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Cid     uint64            `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	Hls     bool              `protobuf:"varint,3,opt,name=hls,proto3" json:"hls,omitempty"`
}

func (x *GetLiveStreamsReq) Reset() {
	*x = GetLiveStreamsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveStreamsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveStreamsReq) ProtoMessage() {}

func (x *GetLiveStreamsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveStreamsReq.ProtoReflect.Descriptor instead.
func (*GetLiveStreamsReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{26}
}

func (x *GetLiveStreamsReq) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *GetLiveStreamsReq) GetCid() uint64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *GetLiveStreamsReq) GetHls() bool {
	if x != nil {
		return x.Hls
	}
	return false
}

type LiveStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quality uint64   `protobuf:"varint,1,opt,name=quality,proto3" json:"quality,omitempty"`
	Urls    []string `protobuf:"bytes,2,rep,name=urls,proto3" json:"urls,omitempty"`
	Desc    string   `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *LiveStream) Reset() {
	*x = LiveStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveStream) ProtoMessage() {}

func (x *LiveStream) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveStream.ProtoReflect.Descriptor instead.
func (*LiveStream) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{27}
}

func (x *LiveStream) GetQuality() uint64 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *LiveStream) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *LiveStream) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type GetLiveStreamsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiveStreams []*LiveStream `protobuf:"bytes,1,rep,name=liveStreams,proto3" json:"liveStreams,omitempty"`
}

func (x *GetLiveStreamsResp) Reset() {
	*x = GetLiveStreamsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveStreamsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveStreamsResp) ProtoMessage() {}

func (x *GetLiveStreamsResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveStreamsResp.ProtoReflect.Descriptor instead.
func (*GetLiveStreamsResp) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{28}
}

func (x *GetLiveStreamsResp) GetLiveStreams() []*LiveStream {
	if x != nil {
		return x.LiveStreams
	}
	return nil
}

type ParseLivePageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies map[string]string `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RoomID  uint64            `protobuf:"varint,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
}

func (x *ParseLivePageReq) Reset() {
	*x = ParseLivePageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_bilibili_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseLivePageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseLivePageReq) ProtoMessage() {}

func (x *ParseLivePageReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_bilibili_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseLivePageReq.ProtoReflect.Descriptor instead.
func (*ParseLivePageReq) Descriptor() ([]byte, []int) {
	return file_bilibili_bilibili_proto_rawDescGZIP(), []int{29}
}

func (x *ParseLivePageReq) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *ParseLivePageReq) GetRoomID() uint64 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

var File_bilibili_bilibili_proto protoreflect.FileDescriptor

var file_bilibili_bilibili_proto_rawDesc = []byte{
	0x0a, 0x17, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x33,
	0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x26, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xcf, 0x01, 0x0a, 0x13,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x48, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74,
	0x68, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x54, 0x0a,
	0x0e, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x67, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x67, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x22, 0x71, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x53, 0x4d, 0x53, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x22, 0x2c, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x53, 0x4d, 0x53,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x4b, 0x65, 0x79, 0x22, 0x5b, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x4d, 0x53, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4b, 0x65,
	0x79, 0x22, 0x95, 0x01, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x53, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x1a, 0x3a, 0x0a,
	0x0c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x76, 0x0a, 0x0d, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x8d, 0x01, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x76, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x65, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x69, 0x76,
	0x65, 0x22, 0xd9, 0x01, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x73, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x61, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x98, 0x01,
	0x0a, 0x08, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x0d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xe3, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x07, 0x63,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x61,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd1,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x52, 0x4c, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x61, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x76, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x63, 0x69, 0x64, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x41, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x70, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x70, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68,
	0x65, 0x76, 0x63, 0x4d, 0x70, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65,
	0x76, 0x63, 0x4d, 0x70, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x44, 0x0a, 0x07, 0x63, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x61, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x63, 0x69, 0x64, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x9d, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x53, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xbb, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x47, 0x43,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x44, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x47, 0x43,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x73, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x65, 0x70, 0x69, 0x64, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xcd, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x47, 0x43, 0x55, 0x52, 0x4c, 0x52,
	0x65, 0x71, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x47, 0x43, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x2e,
	0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x65, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xbb, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x50, 0x47, 0x43,
	0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x12, 0x45, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x50, 0x47,
	0x43, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x65, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x65, 0x70, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x63, 0x69, 0x64, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x3f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x50, 0x47, 0x43, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x70, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x70, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x76, 0x63, 0x4d, 0x70,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x76, 0x63, 0x4d, 0x70, 0x64,
	0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6e,
	0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x56, 0x69,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x56, 0x69, 0x70, 0x22, 0x1c,
	0x0a, 0x08, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x2f, 0x0a, 0x09,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbb, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x68, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x68, 0x6c, 0x73, 0x1a,
	0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4e, 0x0a, 0x0a, 0x4c,
	0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x50, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x22, 0xad, 0x01,
	0x0a, 0x10, 0x50, 0x61, 0x72, 0x73, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x45, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x52, 0x0a,
	0x0c, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58,
	0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x54, 0x53, 0x43,
	0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x43, 0x41, 0x4e, 0x4e,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x04, 0x32, 0xa2, 0x0e, 0x0a, 0x08, 0x42, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x12, 0x5f,
	0x0a, 0x09, 0x4e, 0x65, 0x77, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x4e, 0x65, 0x77, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2f, 0x6e, 0x65, 0x77, 0x5f, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x82, 0x01, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x51, 0x52, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x51, 0x52, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x51, 0x52,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24,
	0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x71, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x62, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x6e, 0x65, 0x77,
	0x5f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x5d, 0x0a, 0x06, 0x4e, 0x65, 0x77, 0x53,
	0x4d, 0x53, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x4d, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x4d,
	0x53, 0x52, 0x65, 0x73, 0x70, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a,
	0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f,
	0x6e, 0x65, 0x77, 0x5f, 0x73, 0x6d, 0x73, 0x12, 0x76, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x57, 0x69, 0x74, 0x68, 0x53, 0x4d, 0x53, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x53, 0x4d, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01,
	0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x6d, 0x73, 0x12,
	0x79, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x6b, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c, 0x22,
	0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x83, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x73, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c, 0x12, 0x20, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x73, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x73, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x64,
	0x61, 0x73, 0x68, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x75, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x26, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x73, 0x12, 0x73, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x47, 0x43,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x47, 0x43, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x73, 0x65,
	0x5f, 0x70, 0x67, 0x63, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x65, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x50, 0x47, 0x43, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x47, 0x43, 0x55, 0x52, 0x4c, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x67, 0x63, 0x5f, 0x75, 0x72, 0x6c,
	0x12, 0x7b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x50, 0x47, 0x43, 0x55, 0x52,
	0x4c, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x50, 0x47, 0x43, 0x55, 0x52, 0x4c, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x50, 0x47, 0x43, 0x55, 0x52, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x67, 0x65, 0x74,
	0x5f, 0x64, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x67, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x65, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x58, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x7e,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x67, 0x65,
	0x74, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x76,
	0x0a, 0x0d, 0x50, 0x61, 0x72, 0x73, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x28, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x76,
	0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x45, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x50, 0x01, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x76, 0x2d, 0x6f, 0x72, 0x67, 0x2f,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x3b, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_bilibili_proto_rawDescOnce sync.Once
	file_bilibili_bilibili_proto_rawDescData = file_bilibili_bilibili_proto_rawDesc
)

func file_bilibili_bilibili_proto_rawDescGZIP() []byte {
	file_bilibili_bilibili_proto_rawDescOnce.Do(func() {
		file_bilibili_bilibili_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_bilibili_proto_rawDescData)
	})
	return file_bilibili_bilibili_proto_rawDescData
}

var file_bilibili_bilibili_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bilibili_bilibili_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_bilibili_bilibili_proto_goTypes = []interface{}{
	(QRCodeStatus)(0),           // 0: api.bilibili.QRCodeStatus
	(*Empty)(nil),               // 1: api.bilibili.Empty
	(*NewQRCodeResp)(nil),       // 2: api.bilibili.NewQRCodeResp
	(*LoginWithQRCodeReq)(nil),  // 3: api.bilibili.LoginWithQRCodeReq
	(*LoginWithQRCodeResp)(nil), // 4: api.bilibili.LoginWithQRCodeResp
	(*NewCaptchaResp)(nil),      // 5: api.bilibili.NewCaptchaResp
	(*NewSMSReq)(nil),           // 6: api.bilibili.NewSMSReq
	(*NewSMSResp)(nil),          // 7: api.bilibili.NewSMSResp
	(*LoginWithSMSReq)(nil),     // 8: api.bilibili.LoginWithSMSReq
	(*LoginWithSMSResp)(nil),    // 9: api.bilibili.LoginWithSMSResp
	(*VideoPageInfo)(nil),       // 10: api.bilibili.VideoPageInfo
	(*VideoInfo)(nil),           // 11: api.bilibili.VideoInfo
	(*ParseVideoPageReq)(nil),   // 12: api.bilibili.ParseVideoPageReq
	(*VideoURL)(nil),            // 13: api.bilibili.VideoURL
	(*GetVideoURLReq)(nil),      // 14: api.bilibili.GetVideoURLReq
	(*GetDashVideoURLReq)(nil),  // 15: api.bilibili.GetDashVideoURLReq
	(*GetDashVideoURLResp)(nil), // 16: api.bilibili.GetDashVideoURLResp
	(*GetSubtitlesReq)(nil),     // 17: api.bilibili.GetSubtitlesReq
	(*GetSubtitlesResp)(nil),    // 18: api.bilibili.GetSubtitlesResp
	(*ParsePGCPageReq)(nil),     // 19: api.bilibili.ParsePGCPageReq
	(*GetPGCURLReq)(nil),        // 20: api.bilibili.GetPGCURLReq
	(*GetDashPGCURLReq)(nil),    // 21: api.bilibili.GetDashPGCURLReq
	(*GetDashPGCURLResp)(nil),   // 22: api.bilibili.GetDashPGCURLResp
	(*UserInfoReq)(nil),         // 23: api.bilibili.UserInfoReq
	(*UserInfoResp)(nil),        // 24: api.bilibili.UserInfoResp
	(*MatchReq)(nil),            // 25: api.bilibili.MatchReq
	(*MatchResp)(nil),           // 26: api.bilibili.MatchResp
	(*GetLiveStreamsReq)(nil),   // 27: api.bilibili.GetLiveStreamsReq
	(*LiveStream)(nil),          // 28: api.bilibili.LiveStream
	(*GetLiveStreamsResp)(nil),  // 29: api.bilibili.GetLiveStreamsResp
	(*ParseLivePageReq)(nil),    // 30: api.bilibili.ParseLivePageReq
	nil,                         // 31: api.bilibili.LoginWithQRCodeResp.CookiesEntry
	nil,                         // 32: api.bilibili.LoginWithSMSResp.CookiesEntry
	nil,                         // 33: api.bilibili.ParseVideoPageReq.CookiesEntry
	nil,                         // 34: api.bilibili.GetVideoURLReq.CookiesEntry
	nil,                         // 35: api.bilibili.GetDashVideoURLReq.CookiesEntry
	nil,                         // 36: api.bilibili.GetSubtitlesReq.CookiesEntry
	nil,                         // 37: api.bilibili.GetSubtitlesResp.SubtitlesEntry
	nil,                         // 38: api.bilibili.ParsePGCPageReq.CookiesEntry
	nil,                         // 39: api.bilibili.GetPGCURLReq.CookiesEntry
	nil,                         // 40: api.bilibili.GetDashPGCURLReq.CookiesEntry
	nil,                         // 41: api.bilibili.UserInfoReq.CookiesEntry
	nil,                         // 42: api.bilibili.GetLiveStreamsReq.CookiesEntry
	nil,                         // 43: api.bilibili.ParseLivePageReq.CookiesEntry
}
var file_bilibili_bilibili_proto_depIdxs = []int32{
	0,  // 0: api.bilibili.LoginWithQRCodeResp.status:type_name -> api.bilibili.QRCodeStatus
	31, // 1: api.bilibili.LoginWithQRCodeResp.cookies:type_name -> api.bilibili.LoginWithQRCodeResp.CookiesEntry
	32, // 2: api.bilibili.LoginWithSMSResp.cookies:type_name -> api.bilibili.LoginWithSMSResp.CookiesEntry
	11, // 3: api.bilibili.VideoPageInfo.videoInfos:type_name -> api.bilibili.VideoInfo
	33, // 4: api.bilibili.ParseVideoPageReq.cookies:type_name -> api.bilibili.ParseVideoPageReq.CookiesEntry
	34, // 5: api.bilibili.GetVideoURLReq.cookies:type_name -> api.bilibili.GetVideoURLReq.CookiesEntry
	35, // 6: api.bilibili.GetDashVideoURLReq.cookies:type_name -> api.bilibili.GetDashVideoURLReq.CookiesEntry
	36, // 7: api.bilibili.GetSubtitlesReq.cookies:type_name -> api.bilibili.GetSubtitlesReq.CookiesEntry
	37, // 8: api.bilibili.GetSubtitlesResp.subtitles:type_name -> api.bilibili.GetSubtitlesResp.SubtitlesEntry
	38, // 9: api.bilibili.ParsePGCPageReq.cookies:type_name -> api.bilibili.ParsePGCPageReq.CookiesEntry
	39, // 10: api.bilibili.GetPGCURLReq.cookies:type_name -> api.bilibili.GetPGCURLReq.CookiesEntry
	40, // 11: api.bilibili.GetDashPGCURLReq.cookies:type_name -> api.bilibili.GetDashPGCURLReq.CookiesEntry
	41, // 12: api.bilibili.UserInfoReq.cookies:type_name -> api.bilibili.UserInfoReq.CookiesEntry
	42, // 13: api.bilibili.GetLiveStreamsReq.cookies:type_name -> api.bilibili.GetLiveStreamsReq.CookiesEntry
	28, // 14: api.bilibili.GetLiveStreamsResp.liveStreams:type_name -> api.bilibili.LiveStream
	43, // 15: api.bilibili.ParseLivePageReq.cookies:type_name -> api.bilibili.ParseLivePageReq.CookiesEntry
	1,  // 16: api.bilibili.Bilibili.NewQRCode:input_type -> api.bilibili.Empty
	3,  // 17: api.bilibili.Bilibili.LoginWithQRCode:input_type -> api.bilibili.LoginWithQRCodeReq
	1,  // 18: api.bilibili.Bilibili.NewCaptcha:input_type -> api.bilibili.Empty
	6,  // 19: api.bilibili.Bilibili.NewSMS:input_type -> api.bilibili.NewSMSReq
	8,  // 20: api.bilibili.Bilibili.LoginWithSMS:input_type -> api.bilibili.LoginWithSMSReq
	12, // 21: api.bilibili.Bilibili.ParseVideoPage:input_type -> api.bilibili.ParseVideoPageReq
	14, // 22: api.bilibili.Bilibili.GetVideoURL:input_type -> api.bilibili.GetVideoURLReq
	15, // 23: api.bilibili.Bilibili.GetDashVideoURL:input_type -> api.bilibili.GetDashVideoURLReq
	17, // 24: api.bilibili.Bilibili.GetSubtitles:input_type -> api.bilibili.GetSubtitlesReq
	19, // 25: api.bilibili.Bilibili.ParsePGCPage:input_type -> api.bilibili.ParsePGCPageReq
	20, // 26: api.bilibili.Bilibili.GetPGCURL:input_type -> api.bilibili.GetPGCURLReq
	21, // 27: api.bilibili.Bilibili.GetDashPGCURL:input_type -> api.bilibili.GetDashPGCURLReq
	23, // 28: api.bilibili.Bilibili.UserInfo:input_type -> api.bilibili.UserInfoReq
	25, // 29: api.bilibili.Bilibili.Match:input_type -> api.bilibili.MatchReq
	27, // 30: api.bilibili.Bilibili.GetLiveStreams:input_type -> api.bilibili.GetLiveStreamsReq
	30, // 31: api.bilibili.Bilibili.ParseLivePage:input_type -> api.bilibili.ParseLivePageReq
	2,  // 32: api.bilibili.Bilibili.NewQRCode:output_type -> api.bilibili.NewQRCodeResp
	4,  // 33: api.bilibili.Bilibili.LoginWithQRCode:output_type -> api.bilibili.LoginWithQRCodeResp
	5,  // 34: api.bilibili.Bilibili.NewCaptcha:output_type -> api.bilibili.NewCaptchaResp
	7,  // 35: api.bilibili.Bilibili.NewSMS:output_type -> api.bilibili.NewSMSResp
	9,  // 36: api.bilibili.Bilibili.LoginWithSMS:output_type -> api.bilibili.LoginWithSMSResp
	10, // 37: api.bilibili.Bilibili.ParseVideoPage:output_type -> api.bilibili.VideoPageInfo
	13, // 38: api.bilibili.Bilibili.GetVideoURL:output_type -> api.bilibili.VideoURL
	16, // 39: api.bilibili.Bilibili.GetDashVideoURL:output_type -> api.bilibili.GetDashVideoURLResp
	18, // 40: api.bilibili.Bilibili.GetSubtitles:output_type -> api.bilibili.GetSubtitlesResp
	10, // 41: api.bilibili.Bilibili.ParsePGCPage:output_type -> api.bilibili.VideoPageInfo
	13, // 42: api.bilibili.Bilibili.GetPGCURL:output_type -> api.bilibili.VideoURL
	22, // 43: api.bilibili.Bilibili.GetDashPGCURL:output_type -> api.bilibili.GetDashPGCURLResp
	24, // 44: api.bilibili.Bilibili.UserInfo:output_type -> api.bilibili.UserInfoResp
	26, // 45: api.bilibili.Bilibili.Match:output_type -> api.bilibili.MatchResp
	29, // 46: api.bilibili.Bilibili.GetLiveStreams:output_type -> api.bilibili.GetLiveStreamsResp
	10, // 47: api.bilibili.Bilibili.ParseLivePage:output_type -> api.bilibili.VideoPageInfo
	32, // [32:48] is the sub-list for method output_type
	16, // [16:32] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_bilibili_bilibili_proto_init() }
func file_bilibili_bilibili_proto_init() {
	if File_bilibili_bilibili_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_bilibili_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewQRCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginWithQRCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginWithQRCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCaptchaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSMSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSMSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginWithSMSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginWithSMSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseVideoPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoURL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoURLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDashVideoURLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDashVideoURLResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubtitlesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubtitlesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParsePGCPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPGCURLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDashPGCURLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDashPGCURLResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveStreamsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveStreamsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_bilibili_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseLivePageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_bilibili_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_bilibili_proto_goTypes,
		DependencyIndexes: file_bilibili_bilibili_proto_depIdxs,
		EnumInfos:         file_bilibili_bilibili_proto_enumTypes,
		MessageInfos:      file_bilibili_bilibili_proto_msgTypes,
	}.Build()
	File_bilibili_bilibili_proto = out.File
	file_bilibili_bilibili_proto_rawDesc = nil
	file_bilibili_bilibili_proto_goTypes = nil
	file_bilibili_bilibili_proto_depIdxs = nil
}
