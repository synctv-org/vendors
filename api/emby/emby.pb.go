// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: emby/emby.proto

package emby

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{0}
}

func (x *LoginReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *LoginReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	ServerId string `protobuf:"bytes,3,opt,name=serverId,proto3" json:"serverId,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LoginResp) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type MeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host   string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	UserId string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *MeReq) Reset() {
	*x = MeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeReq) ProtoMessage() {}

func (x *MeReq) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeReq.ProtoReflect.Descriptor instead.
func (*MeReq) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{2}
}

func (x *MeReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *MeReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *MeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ServerId string `protobuf:"bytes,3,opt,name=serverId,proto3" json:"serverId,omitempty"`
}

func (x *MeResp) Reset() {
	*x = MeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeResp) ProtoMessage() {}

func (x *MeResp) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeResp.ProtoReflect.Descriptor instead.
func (*MeResp) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{3}
}

func (x *MeResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MeResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MeResp) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type GetItemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host       string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ParentId   string `protobuf:"bytes,3,opt,name=parentId,proto3" json:"parentId,omitempty"`
	SearchTerm string `protobuf:"bytes,4,opt,name=searchTerm,proto3" json:"searchTerm,omitempty"`
}

func (x *GetItemsReq) Reset() {
	*x = GetItemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemsReq) ProtoMessage() {}

func (x *GetItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemsReq.ProtoReflect.Descriptor instead.
func (*GetItemsReq) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{4}
}

func (x *GetItemsReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetItemsReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetItemsReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *GetItemsReq) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

type MediaStreamInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codec           string `protobuf:"bytes,1,opt,name=codec,proto3" json:"codec,omitempty"`
	Language        string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Type            string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Title           string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	DisplayTitle    string `protobuf:"bytes,5,opt,name=displayTitle,proto3" json:"displayTitle,omitempty"`
	DisplayLanguage string `protobuf:"bytes,6,opt,name=displayLanguage,proto3" json:"displayLanguage,omitempty"`
	IsDefault       bool   `protobuf:"varint,7,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	Index           uint64 `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
	Protocol        string `protobuf:"bytes,9,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *MediaStreamInfo) Reset() {
	*x = MediaStreamInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaStreamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaStreamInfo) ProtoMessage() {}

func (x *MediaStreamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaStreamInfo.ProtoReflect.Descriptor instead.
func (*MediaStreamInfo) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{5}
}

func (x *MediaStreamInfo) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *MediaStreamInfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *MediaStreamInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MediaStreamInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MediaStreamInfo) GetDisplayTitle() string {
	if x != nil {
		return x.DisplayTitle
	}
	return ""
}

func (x *MediaStreamInfo) GetDisplayLanguage() string {
	if x != nil {
		return x.DisplayLanguage
	}
	return ""
}

func (x *MediaStreamInfo) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *MediaStreamInfo) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *MediaStreamInfo) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type MediaSourceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                       string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path                       string             `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Container                  string             `protobuf:"bytes,4,opt,name=container,proto3" json:"container,omitempty"`
	Protocol                   string             `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	DefaultSubtitleStreamIndex uint64             `protobuf:"varint,6,opt,name=defaultSubtitleStreamIndex,proto3" json:"defaultSubtitleStreamIndex,omitempty"`
	DefaultAudioStreamIndex    uint64             `protobuf:"varint,7,opt,name=defaultAudioStreamIndex,proto3" json:"defaultAudioStreamIndex,omitempty"`
	MediaStreamInfo            []*MediaStreamInfo `protobuf:"bytes,8,rep,name=mediaStreamInfo,proto3" json:"mediaStreamInfo,omitempty"`
}

func (x *MediaSourceInfo) Reset() {
	*x = MediaSourceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaSourceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaSourceInfo) ProtoMessage() {}

func (x *MediaSourceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaSourceInfo.ProtoReflect.Descriptor instead.
func (*MediaSourceInfo) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{6}
}

func (x *MediaSourceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MediaSourceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MediaSourceInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MediaSourceInfo) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *MediaSourceInfo) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *MediaSourceInfo) GetDefaultSubtitleStreamIndex() uint64 {
	if x != nil {
		return x.DefaultSubtitleStreamIndex
	}
	return 0
}

func (x *MediaSourceInfo) GetDefaultAudioStreamIndex() uint64 {
	if x != nil {
		return x.DefaultAudioStreamIndex
	}
	return 0
}

func (x *MediaSourceInfo) GetMediaStreamInfo() []*MediaStreamInfo {
	if x != nil {
		return x.MediaStreamInfo
	}
	return nil
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id              string             `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Type            string             `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	ParentId        string             `protobuf:"bytes,4,opt,name=parentId,proto3" json:"parentId,omitempty"`
	SeriesName      string             `protobuf:"bytes,5,opt,name=seriesName,proto3" json:"seriesName,omitempty"`
	SeriesId        string             `protobuf:"bytes,6,opt,name=seriesId,proto3" json:"seriesId,omitempty"`
	SeasonName      string             `protobuf:"bytes,7,opt,name=seasonName,proto3" json:"seasonName,omitempty"`
	SeasonId        string             `protobuf:"bytes,8,opt,name=seasonId,proto3" json:"seasonId,omitempty"`
	IsFolder        bool               `protobuf:"varint,9,opt,name=isFolder,proto3" json:"isFolder,omitempty"`
	MediaSourceInfo []*MediaSourceInfo `protobuf:"bytes,10,rep,name=mediaSourceInfo,proto3" json:"mediaSourceInfo,omitempty"`
	CollectionType  string             `protobuf:"bytes,11,opt,name=collectionType,proto3" json:"collectionType,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{7}
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Item) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Item) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *Item) GetSeriesName() string {
	if x != nil {
		return x.SeriesName
	}
	return ""
}

func (x *Item) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

func (x *Item) GetSeasonName() string {
	if x != nil {
		return x.SeasonName
	}
	return ""
}

func (x *Item) GetSeasonId() string {
	if x != nil {
		return x.SeasonId
	}
	return ""
}

func (x *Item) GetIsFolder() bool {
	if x != nil {
		return x.IsFolder
	}
	return false
}

func (x *Item) GetMediaSourceInfo() []*MediaSourceInfo {
	if x != nil {
		return x.MediaSourceInfo
	}
	return nil
}

func (x *Item) GetCollectionType() string {
	if x != nil {
		return x.CollectionType
	}
	return ""
}

type GetItemsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items            []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalRecordCount uint64  `protobuf:"varint,2,opt,name=totalRecordCount,proto3" json:"totalRecordCount,omitempty"`
}

func (x *GetItemsResp) Reset() {
	*x = GetItemsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemsResp) ProtoMessage() {}

func (x *GetItemsResp) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemsResp.ProtoReflect.Descriptor instead.
func (*GetItemsResp) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{8}
}

func (x *GetItemsResp) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetItemsResp) GetTotalRecordCount() uint64 {
	if x != nil {
		return x.TotalRecordCount
	}
	return 0
}

type GetItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host   string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ItemId string `protobuf:"bytes,3,opt,name=itemId,proto3" json:"itemId,omitempty"`
}

func (x *GetItemReq) Reset() {
	*x = GetItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemReq) ProtoMessage() {}

func (x *GetItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemReq.ProtoReflect.Descriptor instead.
func (*GetItemReq) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{9}
}

func (x *GetItemReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetItemReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetItemReq) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type SystemInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host  string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SystemInfoReq) Reset() {
	*x = SystemInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfoReq) ProtoMessage() {}

func (x *SystemInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfoReq.ProtoReflect.Descriptor instead.
func (*SystemInfoReq) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{10}
}

func (x *SystemInfoReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SystemInfoReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SystemInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemUpdateLevel                    string `protobuf:"bytes,1,opt,name=systemUpdateLevel,proto3" json:"systemUpdateLevel,omitempty"`
	OperatingSystemDisplayName           string `protobuf:"bytes,2,opt,name=operatingSystemDisplayName,proto3" json:"operatingSystemDisplayName,omitempty"`
	PackageName                          string `protobuf:"bytes,3,opt,name=packageName,proto3" json:"packageName,omitempty"`
	HasPendingRestart                    bool   `protobuf:"varint,4,opt,name=hasPendingRestart,proto3" json:"hasPendingRestart,omitempty"`
	IsShuttingDown                       bool   `protobuf:"varint,5,opt,name=isShuttingDown,proto3" json:"isShuttingDown,omitempty"`
	SupportsLibraryMonitor               bool   `protobuf:"varint,6,opt,name=supportsLibraryMonitor,proto3" json:"supportsLibraryMonitor,omitempty"`
	WebSocketPortNumber                  int32  `protobuf:"varint,7,opt,name=webSocketPortNumber,proto3" json:"webSocketPortNumber,omitempty"`
	CanSelfRestart                       bool   `protobuf:"varint,8,opt,name=canSelfRestart,proto3" json:"canSelfRestart,omitempty"`
	CanSelfUpdate                        bool   `protobuf:"varint,9,opt,name=canSelfUpdate,proto3" json:"canSelfUpdate,omitempty"`
	CanLaunchWebBrowser                  bool   `protobuf:"varint,10,opt,name=canLaunchWebBrowser,proto3" json:"canLaunchWebBrowser,omitempty"`
	ProgramDataPath                      string `protobuf:"bytes,11,opt,name=programDataPath,proto3" json:"programDataPath,omitempty"`
	ItemsByNamePath                      string `protobuf:"bytes,12,opt,name=itemsByNamePath,proto3" json:"itemsByNamePath,omitempty"`
	CachePath                            string `protobuf:"bytes,13,opt,name=cachePath,proto3" json:"cachePath,omitempty"`
	LogPath                              string `protobuf:"bytes,14,opt,name=logPath,proto3" json:"logPath,omitempty"`
	InternalMetadataPath                 string `protobuf:"bytes,15,opt,name=internalMetadataPath,proto3" json:"internalMetadataPath,omitempty"`
	TranscodingTempPath                  string `protobuf:"bytes,16,opt,name=transcodingTempPath,proto3" json:"transcodingTempPath,omitempty"`
	HttpServerPortNumber                 int32  `protobuf:"varint,17,opt,name=httpServerPortNumber,proto3" json:"httpServerPortNumber,omitempty"`
	SupportsHttps                        bool   `protobuf:"varint,18,opt,name=supportsHttps,proto3" json:"supportsHttps,omitempty"`
	HttpsPortNumber                      int32  `protobuf:"varint,19,opt,name=httpsPortNumber,proto3" json:"httpsPortNumber,omitempty"`
	HasUpdateAvailable                   bool   `protobuf:"varint,20,opt,name=hasUpdateAvailable,proto3" json:"hasUpdateAvailable,omitempty"`
	SupportsAutoRunAtStartup             bool   `protobuf:"varint,21,opt,name=supportsAutoRunAtStartup,proto3" json:"supportsAutoRunAtStartup,omitempty"`
	HardwareAccelerationRequiresPremiere bool   `protobuf:"varint,22,opt,name=hardwareAccelerationRequiresPremiere,proto3" json:"hardwareAccelerationRequiresPremiere,omitempty"`
	LocalAddress                         string `protobuf:"bytes,23,opt,name=localAddress,proto3" json:"localAddress,omitempty"`
	WanAddress                           string `protobuf:"bytes,24,opt,name=wanAddress,proto3" json:"wanAddress,omitempty"`
	ServerName                           string `protobuf:"bytes,25,opt,name=serverName,proto3" json:"serverName,omitempty"`
	Version                              string `protobuf:"bytes,26,opt,name=version,proto3" json:"version,omitempty"`
	OperatingSystem                      string `protobuf:"bytes,27,opt,name=operatingSystem,proto3" json:"operatingSystem,omitempty"`
	Id                                   string `protobuf:"bytes,28,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SystemInfoResp) Reset() {
	*x = SystemInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfoResp) ProtoMessage() {}

func (x *SystemInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfoResp.ProtoReflect.Descriptor instead.
func (*SystemInfoResp) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{11}
}

func (x *SystemInfoResp) GetSystemUpdateLevel() string {
	if x != nil {
		return x.SystemUpdateLevel
	}
	return ""
}

func (x *SystemInfoResp) GetOperatingSystemDisplayName() string {
	if x != nil {
		return x.OperatingSystemDisplayName
	}
	return ""
}

func (x *SystemInfoResp) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *SystemInfoResp) GetHasPendingRestart() bool {
	if x != nil {
		return x.HasPendingRestart
	}
	return false
}

func (x *SystemInfoResp) GetIsShuttingDown() bool {
	if x != nil {
		return x.IsShuttingDown
	}
	return false
}

func (x *SystemInfoResp) GetSupportsLibraryMonitor() bool {
	if x != nil {
		return x.SupportsLibraryMonitor
	}
	return false
}

func (x *SystemInfoResp) GetWebSocketPortNumber() int32 {
	if x != nil {
		return x.WebSocketPortNumber
	}
	return 0
}

func (x *SystemInfoResp) GetCanSelfRestart() bool {
	if x != nil {
		return x.CanSelfRestart
	}
	return false
}

func (x *SystemInfoResp) GetCanSelfUpdate() bool {
	if x != nil {
		return x.CanSelfUpdate
	}
	return false
}

func (x *SystemInfoResp) GetCanLaunchWebBrowser() bool {
	if x != nil {
		return x.CanLaunchWebBrowser
	}
	return false
}

func (x *SystemInfoResp) GetProgramDataPath() string {
	if x != nil {
		return x.ProgramDataPath
	}
	return ""
}

func (x *SystemInfoResp) GetItemsByNamePath() string {
	if x != nil {
		return x.ItemsByNamePath
	}
	return ""
}

func (x *SystemInfoResp) GetCachePath() string {
	if x != nil {
		return x.CachePath
	}
	return ""
}

func (x *SystemInfoResp) GetLogPath() string {
	if x != nil {
		return x.LogPath
	}
	return ""
}

func (x *SystemInfoResp) GetInternalMetadataPath() string {
	if x != nil {
		return x.InternalMetadataPath
	}
	return ""
}

func (x *SystemInfoResp) GetTranscodingTempPath() string {
	if x != nil {
		return x.TranscodingTempPath
	}
	return ""
}

func (x *SystemInfoResp) GetHttpServerPortNumber() int32 {
	if x != nil {
		return x.HttpServerPortNumber
	}
	return 0
}

func (x *SystemInfoResp) GetSupportsHttps() bool {
	if x != nil {
		return x.SupportsHttps
	}
	return false
}

func (x *SystemInfoResp) GetHttpsPortNumber() int32 {
	if x != nil {
		return x.HttpsPortNumber
	}
	return 0
}

func (x *SystemInfoResp) GetHasUpdateAvailable() bool {
	if x != nil {
		return x.HasUpdateAvailable
	}
	return false
}

func (x *SystemInfoResp) GetSupportsAutoRunAtStartup() bool {
	if x != nil {
		return x.SupportsAutoRunAtStartup
	}
	return false
}

func (x *SystemInfoResp) GetHardwareAccelerationRequiresPremiere() bool {
	if x != nil {
		return x.HardwareAccelerationRequiresPremiere
	}
	return false
}

func (x *SystemInfoResp) GetLocalAddress() string {
	if x != nil {
		return x.LocalAddress
	}
	return ""
}

func (x *SystemInfoResp) GetWanAddress() string {
	if x != nil {
		return x.WanAddress
	}
	return ""
}

func (x *SystemInfoResp) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *SystemInfoResp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SystemInfoResp) GetOperatingSystem() string {
	if x != nil {
		return x.OperatingSystem
	}
	return ""
}

func (x *SystemInfoResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host       string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Path       string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	StartIndex uint64 `protobuf:"varint,4,opt,name=startIndex,proto3" json:"startIndex,omitempty"`
	Limit      uint64 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	SearchTerm string `protobuf:"bytes,6,opt,name=searchTerm,proto3" json:"searchTerm,omitempty"`
}

func (x *FsListReq) Reset() {
	*x = FsListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsListReq) ProtoMessage() {}

func (x *FsListReq) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsListReq.ProtoReflect.Descriptor instead.
func (*FsListReq) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{12}
}

func (x *FsListReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FsListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FsListReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FsListReq) GetStartIndex() uint64 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *FsListReq) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FsListReq) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

type Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Path) Reset() {
	*x = Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{13}
}

func (x *Path) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Path) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FsListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths []*Path `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	Items []*Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Total uint64  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FsListResp) Reset() {
	*x = FsListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsListResp) ProtoMessage() {}

func (x *FsListResp) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsListResp.ProtoReflect.Descriptor instead.
func (*FsListResp) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{14}
}

func (x *FsListResp) GetPaths() []*Path {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *FsListResp) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *FsListResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type LogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host  string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LogoutReq) Reset() {
	*x = LogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReq) ProtoMessage() {}

func (x *LogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReq.ProtoReflect.Descriptor instead.
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{15}
}

func (x *LogoutReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *LogoutReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emby_emby_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_emby_emby_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_emby_emby_proto_rawDescGZIP(), []int{16}
}

var File_emby_emby_proto protoreflect.FileDescriptor

var file_emby_emby_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x6d, 0x62, 0x79, 0x2f, 0x65, 0x6d, 0x62, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x08, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x55, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x05, 0x4d, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x06, 0x4d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x73, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x72, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65,
	0x72, 0x6d, 0x22, 0x8b, 0x02, 0x0a, 0x0f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x22, 0xc2, 0x02, 0x0a, 0x0f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x3e, 0x0a, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x38, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x43, 0x0a, 0x0f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x6d, 0x62, 0x79, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xdb, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x60, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xce, 0x09, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x3e, 0x0a, 0x1a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x68, 0x61, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x53, 0x68, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44,
	0x6f, 0x77, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x68, 0x75,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x36, 0x0a, 0x16, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x12, 0x30, 0x0a, 0x13, 0x77, 0x65, 0x62, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13,
	0x77, 0x65, 0x62, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x61, 0x6e,
	0x53, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x61, 0x6e, 0x53, 0x65, 0x6c, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6c, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x61, 0x6e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x57, 0x65,
	0x62, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x63, 0x61, 0x6e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x57, 0x65, 0x62, 0x42, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a,
	0x0f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x32, 0x0a, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d,
	0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x14, 0x68, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x68, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x48, 0x74, 0x74, 0x70, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x48, 0x74, 0x74, 0x70, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x68, 0x74, 0x74, 0x70, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x68, 0x74, 0x74, 0x70, 0x73, 0x50,
	0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x61, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x75, 0x6e, 0x41, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x75, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x75, 0x6e, 0x41, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x75, 0x70, 0x12, 0x52, 0x0a, 0x24, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x73, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x24, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x73, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x77, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x9f, 0x01, 0x0a, 0x09, 0x46, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x72,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x65, 0x72, 0x6d, 0x22, 0x2e, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x22, 0x6e, 0x0a, 0x0a, 0x46, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79, 0x2e, 0x50, 0x61, 0x74, 0x68,
	0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62,
	0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x35, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x32, 0xc5, 0x04, 0x0a, 0x04, 0x45, 0x6d, 0x62, 0x79, 0x12, 0x48, 0x0a, 0x05,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x6d, 0x62, 0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x16,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x22, 0x0b, 0x2f, 0x65, 0x6d, 0x62, 0x79,
	0x2f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x42, 0x0a, 0x02, 0x4d, 0x65, 0x12, 0x0f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79, 0x2e, 0x4d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79, 0x2e, 0x4d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x65, 0x6d, 0x62,
	0x79, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x4d, 0x65, 0x12, 0x51, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a,
	0x22, 0x0b, 0x2f, 0x65, 0x6d, 0x62, 0x79, 0x2f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x50, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6d, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x0e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x1f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x65, 0x6d, 0x62, 0x79,
	0x2f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x7d, 0x12,
	0x60, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x6d, 0x62, 0x79, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11,
	0x2f, 0x65, 0x6d, 0x62, 0x79, 0x2f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x56, 0x0a, 0x06, 0x46, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79, 0x2e, 0x46, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79, 0x2e, 0x46, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01,
	0x2a, 0x22, 0x16, 0x2f, 0x65, 0x6d, 0x62, 0x79, 0x2f, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x50, 0x0a, 0x06, 0x4c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79, 0x2e, 0x4c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6d, 0x62, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x65, 0x6d, 0x62, 0x79, 0x2f, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x42, 0x39, 0x0a, 0x08, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x6d, 0x62, 0x79, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x76, 0x2d, 0x6f, 0x72, 0x67,
	0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6d, 0x62,
	0x79, 0x3b, 0x65, 0x6d, 0x62, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_emby_emby_proto_rawDescOnce sync.Once
	file_emby_emby_proto_rawDescData = file_emby_emby_proto_rawDesc
)

func file_emby_emby_proto_rawDescGZIP() []byte {
	file_emby_emby_proto_rawDescOnce.Do(func() {
		file_emby_emby_proto_rawDescData = protoimpl.X.CompressGZIP(file_emby_emby_proto_rawDescData)
	})
	return file_emby_emby_proto_rawDescData
}

var file_emby_emby_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_emby_emby_proto_goTypes = []interface{}{
	(*LoginReq)(nil),        // 0: api.emby.LoginReq
	(*LoginResp)(nil),       // 1: api.emby.LoginResp
	(*MeReq)(nil),           // 2: api.emby.MeReq
	(*MeResp)(nil),          // 3: api.emby.MeResp
	(*GetItemsReq)(nil),     // 4: api.emby.GetItemsReq
	(*MediaStreamInfo)(nil), // 5: api.emby.MediaStreamInfo
	(*MediaSourceInfo)(nil), // 6: api.emby.MediaSourceInfo
	(*Item)(nil),            // 7: api.emby.Item
	(*GetItemsResp)(nil),    // 8: api.emby.GetItemsResp
	(*GetItemReq)(nil),      // 9: api.emby.GetItemReq
	(*SystemInfoReq)(nil),   // 10: api.emby.SystemInfoReq
	(*SystemInfoResp)(nil),  // 11: api.emby.SystemInfoResp
	(*FsListReq)(nil),       // 12: api.emby.FsListReq
	(*Path)(nil),            // 13: api.emby.Path
	(*FsListResp)(nil),      // 14: api.emby.FsListResp
	(*LogoutReq)(nil),       // 15: api.emby.LogoutReq
	(*Empty)(nil),           // 16: api.emby.Empty
}
var file_emby_emby_proto_depIdxs = []int32{
	5,  // 0: api.emby.MediaSourceInfo.mediaStreamInfo:type_name -> api.emby.MediaStreamInfo
	6,  // 1: api.emby.Item.mediaSourceInfo:type_name -> api.emby.MediaSourceInfo
	7,  // 2: api.emby.GetItemsResp.items:type_name -> api.emby.Item
	13, // 3: api.emby.FsListResp.paths:type_name -> api.emby.Path
	7,  // 4: api.emby.FsListResp.items:type_name -> api.emby.Item
	0,  // 5: api.emby.Emby.Login:input_type -> api.emby.LoginReq
	2,  // 6: api.emby.Emby.Me:input_type -> api.emby.MeReq
	4,  // 7: api.emby.Emby.GetItems:input_type -> api.emby.GetItemsReq
	9,  // 8: api.emby.Emby.GetItem:input_type -> api.emby.GetItemReq
	10, // 9: api.emby.Emby.GetSystemInfo:input_type -> api.emby.SystemInfoReq
	12, // 10: api.emby.Emby.FsList:input_type -> api.emby.FsListReq
	15, // 11: api.emby.Emby.Logout:input_type -> api.emby.LogoutReq
	1,  // 12: api.emby.Emby.Login:output_type -> api.emby.LoginResp
	3,  // 13: api.emby.Emby.Me:output_type -> api.emby.MeResp
	8,  // 14: api.emby.Emby.GetItems:output_type -> api.emby.GetItemsResp
	7,  // 15: api.emby.Emby.GetItem:output_type -> api.emby.Item
	11, // 16: api.emby.Emby.GetSystemInfo:output_type -> api.emby.SystemInfoResp
	14, // 17: api.emby.Emby.FsList:output_type -> api.emby.FsListResp
	16, // 18: api.emby.Emby.Logout:output_type -> api.emby.Empty
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_emby_emby_proto_init() }
func file_emby_emby_proto_init() {
	if File_emby_emby_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_emby_emby_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaStreamInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaSourceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emby_emby_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_emby_emby_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_emby_emby_proto_goTypes,
		DependencyIndexes: file_emby_emby_proto_depIdxs,
		MessageInfos:      file_emby_emby_proto_msgTypes,
	}.Build()
	File_emby_emby_proto = out.File
	file_emby_emby_proto_rawDesc = nil
	file_emby_emby_proto_goTypes = nil
	file_emby_emby_proto_depIdxs = nil
}
